#!/usr/bin/env python3
import re
import sys
import warnings
warnings.filterwarnings("ignore")

try:
    from sploitkit import *
    from tinyscript.helpers import is_bool, ExpiringDict, Path
    from tinyscript import *
except ImportError as e:
    print(f"Import error: {e}")
    sys.exit(1)

class OsifConsole(FrameworkConsole):
    exclude = ["root/test", "root/help"]  # Fixed typo
    sources = {'banners': "banners"}

__all__ = ["OsifConsole"]
__script__ = "osif"
__doc__ = """
Osif launcher script.
"""
def initialize_env():
    env_path = os.path.join(os.path.dirname(__file__), ".env")
    if not os.path.exists(env_path):
        print("No .env file found. Let's set up your API keys.")
        keys = [
            "VT_API",
            "CENSYS_APPID",
            "CENSYS_SECRET",
            "ABUSECH_API_KEY",
            "SHODAN_API_KEY",
            "HUNTER_API_KEY",
            "BITCOINABUSE_API_KEY",
            "WIGLE_API_NAME",
            "WIGLE_API_TOKEN"
        ]
        with open(env_path, "w") as env_file:
            for key in keys:
                value = input(f"Enter value for {key}: ")
                env_file.write(f'{key}="{value}"\n')
        print(".env file created successfully!")
    else:
        print(".env file already exists. Skipping setup.")

def main():
    import argparse
    parser = argparse.ArgumentParser(description="OSIF launcher script")
    parser.add_argument("-d", "--dev", action="store_true", help="enable development mode")
    parser.add_argument("-v", "--verbose", action="store_true", help="enable verbose debug mode")
    args = parser.parse_args()

    initialize(exit_at_interrupt=False)

    # Add traceback
    sys.tracebacklimit = 0

    # Disable .pyc files
    sys.dont_write_bytecode = True

    c = OsifConsole(
        "OSIF",
        banner_section_styles={'title': {'fgcolor': "lolcat"}},
        dev=args.dev,
        debug=args.verbose,
    )
    c.start()

if __name__ == '__main__':
    initialize_env()
    main()